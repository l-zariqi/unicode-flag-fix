// Map of flag emojis to their corresponding image URLs
const flagMap = { 
  "ðŸ‡¦ðŸ‡¨": chrome.runtime.getURL("flags/ac.png"),
  "ðŸ‡¦ðŸ‡©": chrome.runtime.getURL("flags/ad.png"),
  "ðŸ‡¦ðŸ‡ª": chrome.runtime.getURL("flags/ae.png"),
  "ðŸ‡¦ðŸ‡«": chrome.runtime.getURL("flags/af.png"),
  "ðŸ‡¦ðŸ‡¬": chrome.runtime.getURL("flags/ag.png"),
  "ðŸ‡¦ðŸ‡®": chrome.runtime.getURL("flags/ai.png"),
  "ðŸ‡¦ðŸ‡±": chrome.runtime.getURL("flags/al.png"),
  "ðŸ‡¦ðŸ‡²": chrome.runtime.getURL("flags/am.png"),
  "ðŸ‡¦ðŸ‡´": chrome.runtime.getURL("flags/ao.png"),
  "ðŸ‡¦ðŸ‡¶": chrome.runtime.getURL("flags/aq.png"),
  "ðŸ‡¦ðŸ‡·": chrome.runtime.getURL("flags/ar.png"),
  "ðŸ‡¦ðŸ‡¸": chrome.runtime.getURL("flags/as.png"),
  "ðŸ‡¦ðŸ‡¹": chrome.runtime.getURL("flags/at.png"),
  "ðŸ‡¦ðŸ‡º": chrome.runtime.getURL("flags/au.png"),
  "ðŸ‡¦ðŸ‡¼": chrome.runtime.getURL("flags/aw.png"),
  "ðŸ‡¦ðŸ‡½": chrome.runtime.getURL("flags/ax.png"),
  "ðŸ‡¦ðŸ‡¿": chrome.runtime.getURL("flags/az.png"),

  "ðŸ‡§ðŸ‡¦": chrome.runtime.getURL("flags/ba.png"),
  "ðŸ‡§ðŸ‡§": chrome.runtime.getURL("flags/bb.png"),
  "ðŸ‡§ðŸ‡©": chrome.runtime.getURL("flags/bd.png"),
  "ðŸ‡§ðŸ‡ª": chrome.runtime.getURL("flags/be.png"),
  "ðŸ‡§ðŸ‡«": chrome.runtime.getURL("flags/bf.png"),
  "ðŸ‡§ðŸ‡¬": chrome.runtime.getURL("flags/bg.png"),
  "ðŸ‡§ðŸ‡­": chrome.runtime.getURL("flags/bh.png"),
  "ðŸ‡§ðŸ‡®": chrome.runtime.getURL("flags/bi.png"),
  "ðŸ‡§ðŸ‡¯": chrome.runtime.getURL("flags/bj.png"),
  "ðŸ‡§ðŸ‡±": chrome.runtime.getURL("flags/bl.png"),
  "ðŸ‡§ðŸ‡²": chrome.runtime.getURL("flags/bm.png"),
  "ðŸ‡§ðŸ‡³": chrome.runtime.getURL("flags/bn.png"),
  "ðŸ‡§ðŸ‡´": chrome.runtime.getURL("flags/bo.png"),
  "ðŸ‡§ðŸ‡¶": chrome.runtime.getURL("flags/bq.png"),
  "ðŸ‡§ðŸ‡·": chrome.runtime.getURL("flags/br.png"),
  "ðŸ‡§ðŸ‡¸": chrome.runtime.getURL("flags/bs.png"),
  "ðŸ‡§ðŸ‡¹": chrome.runtime.getURL("flags/bt.png"),
  "ðŸ‡§ðŸ‡»": chrome.runtime.getURL("flags/bv.png"),
  "ðŸ‡§ðŸ‡¼": chrome.runtime.getURL("flags/bw.png"),
  "ðŸ‡§ðŸ‡¾": chrome.runtime.getURL("flags/by.png"),
  "ðŸ‡§ðŸ‡¿": chrome.runtime.getURL("flags/bz.png"),

  "ðŸ‡¨ðŸ‡¦": chrome.runtime.getURL("flags/ca.png"),
  "ðŸ‡¨ðŸ‡¨": chrome.runtime.getURL("flags/cc.png"),
  "ðŸ‡¨ðŸ‡©": chrome.runtime.getURL("flags/cd.png"),
  "ðŸ‡¨ðŸ‡«": chrome.runtime.getURL("flags/cf.png"),
  "ðŸ‡¨ðŸ‡¬": chrome.runtime.getURL("flags/cg.png"),
  "ðŸ‡¨ðŸ‡­": chrome.runtime.getURL("flags/ch.png"),
  "ðŸ‡¨ðŸ‡®": chrome.runtime.getURL("flags/ci.png"),
  "ðŸ‡¨ðŸ‡°": chrome.runtime.getURL("flags/ck.png"),
  "ðŸ‡¨ðŸ‡±": chrome.runtime.getURL("flags/cl.png"),
  "ðŸ‡¨ðŸ‡²": chrome.runtime.getURL("flags/cm.png"),
  "ðŸ‡¨ðŸ‡³": chrome.runtime.getURL("flags/cn.png"),
  "ðŸ‡¨ðŸ‡´": chrome.runtime.getURL("flags/co.png"),
  "ðŸ‡¨ðŸ‡µ": chrome.runtime.getURL("flags/cp.png"),
  "ðŸ‡¨ðŸ‡·": chrome.runtime.getURL("flags/cr.png"),
  "ðŸ‡¨ðŸ‡º": chrome.runtime.getURL("flags/cu.png"),
  "ðŸ‡¨ðŸ‡»": chrome.runtime.getURL("flags/cv.png"),
  "ðŸ‡¨ðŸ‡¼": chrome.runtime.getURL("flags/cw.png"),
  "ðŸ‡¨ðŸ‡½": chrome.runtime.getURL("flags/cx.png"),
  "ðŸ‡¨ðŸ‡¾": chrome.runtime.getURL("flags/cy.png"),
  "ðŸ‡¨ðŸ‡¿": chrome.runtime.getURL("flags/cz.png"),

  "ðŸ‡©ðŸ‡ª": chrome.runtime.getURL("flags/de.png"),
  "ðŸ‡©ðŸ‡¬": chrome.runtime.getURL("flags/dg.png"),
  "ðŸ‡©ðŸ‡¯": chrome.runtime.getURL("flags/dj.png"),
  "ðŸ‡©ðŸ‡°": chrome.runtime.getURL("flags/dk.png"),
  "ðŸ‡©ðŸ‡²": chrome.runtime.getURL("flags/dm.png"),
  "ðŸ‡©ðŸ‡´": chrome.runtime.getURL("flags/do.png"),
  "ðŸ‡©ðŸ‡¿": chrome.runtime.getURL("flags/dz.png"),

  "ðŸ‡ºðŸ‡¸": chrome.runtime.getURL("flags/us.png"),
  "ðŸ‡¬ðŸ‡§": chrome.runtime.getURL("flags/gb.png"),
  "ðŸ‡«ðŸ‡·": chrome.runtime.getURL("flags/fr.png"),
  "ðŸ‡®ðŸ‡ª": chrome.runtime.getURL("flags/ie.png"),
  "ðŸ‡ªðŸ‡º": chrome.runtime.getURL("flags/eu.png"),
  "ðŸ‡ºðŸ‡¦": chrome.runtime.getURL("flags/ua.png"),
  "ðŸ‡ªðŸ‡¸": chrome.runtime.getURL("flags/es.png")
};

// Function to replace flag emojis with images
function replaceFlagEmojis() {
  const walker = document.createTreeWalker(document.body, NodeFilter.SHOW_TEXT);
  let nodesToReplace = [];

  while (walker.nextNode()) {
    const node = walker.currentNode;
    let text = node.nodeValue;
    let hasEmoji = false;

    for (const [emoji, url] of Object.entries(flagMap)) {
      if (text.includes(emoji)) {
        hasEmoji = true;
      }
    }

    if (hasEmoji) {
      nodesToReplace.push({ node, text });
    }
  }

  for (const { node, text } of nodesToReplace) {
    // Create a new span to hold the modified content
    const span = document.createElement("span");

    // Split the text by emojis and process each part
    let remainingText = text;
    for (const [emoji, url] of Object.entries(flagMap)) {
      if (remainingText.includes(emoji)) {
        // Add text before the emoji
        const textBefore = remainingText.split(emoji)[0];
        if (textBefore) {
          span.appendChild(document.createTextNode(textBefore));
        }

        // Add the flag image
        const img = document.createElement("img");
        img.src = url;
        img.alt = emoji;
        img.style.width = "2rem";
        img.style.height = "2rem";
        img.style.verticalAlign = "middle";
        span.appendChild(img);

        // Update remaining text
        remainingText = remainingText.split(emoji)[1];
      }
    }

    // Add any remaining text after the last emoji
    if (remainingText) {
      span.appendChild(document.createTextNode(remainingText));
    }

    // Replace the original node with the new span
    node.replaceWith(span);
  }
}

// Run after page load
window.onload = () => {
  replaceFlagEmojis();
  const observer = new MutationObserver(replaceFlagEmojis);
  observer.observe(document.body, { childList: true, subtree: true });
};
